name: GitHub Release

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: version
        run: |
          run_number=${{ github.run_number }}
          tag=${GITHUB_SHA::7}
          release=$(printf ci%06d $run_number)
          echo "run_number=$run_number" >> "$GITHUB_OUTPUT"
          echo "tag=$tag" >> "$GITHUB_OUTPUT"
          echo "buildname=$tag" >> "$GITHUB_OUTPUT"
          echo "buildnumber=$run_number" >> "$GITHUB_OUTPUT"
          echo "release=$release" >> "$GITHUB_OUTPUT"
      - name: Update gradle key.properties
        run: |
          echo $'\n' >> android/key.properties
          echo $'keyPassword=${{ secrets.ANDROID_KEYSTORE_PASS }}\n' >> android/key.properties
          echo $'storePassword=${{ secrets.ANDROID_KEYSTORE_PASS }}\n' >> android/key.properties
      - name: Retrieve the signing key and decode it to a file
        env:
          ANDROID_SIGNING_KEY: ${{ secrets.ANDROID_SIGNING_KEY }}
        run: |
          echo $ANDROID_SIGNING_KEY | base64 --decode > android/app/fordem.jks
      - uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
      - uses: subosito/flutter-action@v2
        with:
          channel: "master"
      - run: flutter pub get
      - run: flutter test
      - name: Build Web App
        run: flutter build web --dart-define VERSION=${{ steps.version.outputs.tag }}
      - name: Create Tar File
        run: tar -C build/web/ -zcvf build/web.tar.gz .
      - name: Create Zip File
        run: cd build/web && zip -r ../../build/web.zip .
      - name: Build Android APK
        run: flutter build apk --release --split-per-abi --dart-define VERSION=${{ steps.version.outputs.tag }} --build-name ${{ steps.version.outputs.buildname }} --build-number ${{ steps.version.outputs.buildnumber }}
      - name: Build Android Bundle
        run: flutter build appbundle --dart-define VERSION=${{ steps.version.outputs.tag }} --build-name ${{ steps.version.outputs.buildname }} --build-number ${{ steps.version.outputs.buildnumber }}
      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/app-release.aab,build/web.tar.gz,build/web.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.version.outputs.release }}
          commit: ${{ github.sha }}
      - name: Upload app bundle
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: build/app/outputs/bundle/release/app-release.aab

  release:
    name: Release app to internal track
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get appbundle from artifacts
        uses: actions/download-artifact@v2
        with:
          name: appbundle
      - name: Release app to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAYSTORE_ACCOUNT_KEY }}
          packageName: org.fordem.app
          releaseFiles: app-release.aab
          track: internal
